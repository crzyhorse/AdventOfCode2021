def readPuzzleInput():
    data = []
    with open ('day10puzzleinput.txt') as datafile:
        data = [line.strip() for line in datafile.readlines()]
    return data

def defectpointval(char):
    if char == ')': return 3
    elif char == ']': return 57
    elif char == '}': return 1197
    elif char == '>': return 25137

def autocompletepointval(char):
    if char == ')': return 1
    elif char == ']': return 2
    elif char == '}': return 3
    elif char == '>': return 4

def part1(data):
    incompletelist = []
    pointtotal = 0
    for line in data:
        stop = False
        while not stop:
            prevchars = len(line)
            line=line.replace("[]",'').replace("{}",'').replace("()",'').replace("<>",'')
            if len(line) == prevchars:
                stop = True
        closing =  ['}', ')', '>', ']']
        corrupt = False
        defect = []
        for char in closing:
            findpos = line.find(char)
            if findpos != -1:
                defect.append((char,findpos))    
        defectchar = ''

        if defect:
            defect=sorted(defect, key = lambda x: x[1])[:1]
            defectchar, val =defect[0]  
            pointtotal+=defectpointval(defectchar)
        else:
            incompletelist.append(line)
    print(pointtotal)
    return incompletelist

def part2(incomplete):
    scorelist = []
    for line in incomplete:
        pos = len(line)-1
        closestr = ''
        # find closing chars
        while pos >= 0:
            if line[pos] == '(':
                closestr+= ")"
            elif line[pos] == '[':
                closestr+= "]"
            elif line[pos] == '{':
                closestr+= "}"
            elif line[pos] == '<':
                closestr+= ">"
            pos-=1

        # find scores
        totalscore = 0
        for char in closestr:
            totalscore = totalscore*5
            totalscore += autocompletepointval(char)
        scorelist.append(totalscore)
    # find winner
    scorelist = sorted(scorelist)
    winingpos=int((len(scorelist)+1)/2)-1
    print(scorelist[winingpos])
    
if __name__ == "__main__":
    data = readPuzzleInput()
    print("The answer for part 1 is;")
    incomplete = part1(data)
    print("The answer for part 2 is;")
    part2(incomplete)